
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'wfm_weekly'
version: '1.0.0'
config-version: 2

vars:
  # THIS VARIABLE CAN BE CHANGED TO 'OUTBOUND'
  direction-in: 'Inbound'
  media_type-phone: 'Phone Call'
  direction-out: 'Outbound'
  media_type-email: 'E-Mail'
  week: '{{  }}'
  time: ''
  last60days: ''

# This setting configures which "profile" dbt uses for this project.
profile: 'snowflake'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models", "sources"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
# models:
#   my_new_project:
#     # Config indicated by + and applies to all files under models/example/
#     example:
#       +materialized: view

models:
  # Override warehouse and database for Fivetran, otherwise it'd use its default `fivetran` warehouse and `fivetran` database.
  # +snowflake_warehouse: "COMPUTE_HUMAN"
  # +database: "DBT_DEV"
  +materialized: ephemeral
  +bind: false  # Materialize all views as late-binding.
  +persist_docs:
    relation: true
    columns: true
  wfm_weekly:
    analtyics_wfm_weekly:
      db_asea_reports:
      #   +database: "{{ 'your_prod_db' if target.user.lower() == 'your_etl_service_account' else target.database }}"
      #   # If schema is specified dbt will append whatever is in profiles.yml to what you have listed as schema
      #   # Depending on how you do it you might want to just put DW_ in the prod profiles.yml file
      #   +schema: associate_support
      #   +snowflake_warehouse: "{{ 'your_prod_warhouse' if target.user.lower() == 'your_etl_service_account' else target.warehouse }}" 
      # db_stage_data: 
      #   +database: "{{ 'your_prod_db' if target.user.lower() == 'your_etl_service_account' else target.database }}"
      #   # If schema is specified dbt will append whatever is in profiles.yml to what you have listed as schema
      #   # Depending on how you do it you might want to just put DW_ in the prod profiles.yml file        +schema: _presentation
      #   +schema: associate_support
      #   +snowflake_warehouse: "{{ 'your_prod_warhouse' if target.user.lower() == 'your_etl_service_account' else target.warehouse }}" 
    sources:
     #+database: db_raw_data
      +schema: sources #associate_support
